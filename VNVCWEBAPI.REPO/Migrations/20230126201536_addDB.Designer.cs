// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VNVCWEBAPI.REPO;

#nullable disable

namespace VNVCWEBAPI.REPO.Migrations
{
    [DbContext(typeof(VNVCContext))]
    [Migration("20230126201536_addDB")]
    partial class addDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.AdditionalCustomerInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("FatherFullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FatherPhoneNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<double>("HeightAtBirth")
                        .HasColumnType("float");

                    b.Property<string>("MotherFullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MotherPhoneNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<double>("WeightAtBirth")
                        .HasColumnType("float");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("AdditionalCustomerInformation");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Banner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("href")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Banners");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LoginId")
                        .HasColumnType("int");

                    b.Property<int?>("PackageId")
                        .HasColumnType("int");

                    b.Property<int?>("VaccineId")
                        .HasColumnType("int");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("LoginId");

                    b.HasIndex("PackageId");

                    b.HasIndex("VaccineId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.ConditionPromotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerRankId")
                        .HasColumnType("int");

                    b.Property<int?>("PackageVaccineId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<int?>("PromotionId")
                        .HasColumnType("int");

                    b.Property<int?>("VaccineId")
                        .HasColumnType("int");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerRankId");

                    b.HasIndex("PackageVaccineId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("PromotionId");

                    b.HasIndex("VaccineId");

                    b.ToTable("ConditionPromotions");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdentityCard")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("InsuranceCode")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Sex")
                        .HasColumnType("bit");

                    b.Property<string>("Village")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerTypeId");

                    b.HasIndex("InsuranceCode")
                        .IsUnique()
                        .HasFilter("[InsuranceCode] IS NOT NULL");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.CustomerRank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CustomerRanks");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.CustomerRankDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("PayId")
                        .HasColumnType("int");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PayId");

                    b.ToTable("CustomerRankDetails");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.CustomerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("CustomerTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 0,
                            Created = new DateTime(2023, 1, 27, 3, 15, 35, 292, DateTimeKind.Local).AddTicks(64),
                            Name = "Khách hàng thông thường",
                            isTrash = false
                        });
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.EntrySlip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("StaffId");

                    b.HasIndex("SupplierId");

                    b.ToTable("EntrySlips");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.EntrySlipDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntrySlipId")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("ShipmentID")
                        .HasColumnType("int");

                    b.Property<int?>("VaccineId")
                        .HasColumnType("int");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EntrySlipId");

                    b.HasIndex("ShipmentID");

                    b.HasIndex("VaccineId");

                    b.ToTable("EntrySlipDetails");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.InjectionIncident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("InjectionScheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InjectionTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("int");

                    b.Property<int?>("VaccineId")
                        .HasColumnType("int");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("InjectionScheduleId");

                    b.HasIndex("ShipmentId");

                    b.HasIndex("VaccineId");

                    b.ToTable("InjectionIncidents");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.InjectionSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NominatorId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priorities")
                        .HasColumnType("int");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdaterId")
                        .HasColumnType("int");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("NominatorId");

                    b.HasIndex("StaffId");

                    b.HasIndex("UpdaterId");

                    b.ToTable("InjectionSchedules");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.InjectionScheduleDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Injection")
                        .HasColumnType("bit");

                    b.Property<int>("InjectionScheduleId")
                        .HasColumnType("int");

                    b.Property<int?>("InjectionStaffId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InjectionTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Injections")
                        .HasColumnType("int");

                    b.Property<bool>("Pay")
                        .HasColumnType("bit");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("int");

                    b.Property<int?>("VaccineId")
                        .HasColumnType("int");

                    b.Property<int?>("VaccinePackageid")
                        .HasColumnType("int");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("InjectionScheduleId");

                    b.HasIndex("InjectionStaffId");

                    b.HasIndex("ShipmentId");

                    b.HasIndex("VaccineId");

                    b.HasIndex("VaccinePackageid");

                    b.ToTable("InjectionScheduleDetails");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("varchar(6)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("isLock")
                        .HasColumnType("bit");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.Property<bool>("isValidate")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique()
                        .HasFilter("[CustomerId] IS NOT NULL");

                    b.HasIndex("StaffId")
                        .IsUnique()
                        .HasFilter("[StaffId] IS NOT NULL");

                    b.ToTable("Logins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2023, 1, 27, 3, 15, 35, 292, DateTimeKind.Local).AddTicks(137),
                            PasswordHash = "21232f297a57a5a743894a0e4a801fc3",
                            StaffId = 1,
                            Username = "admin",
                            isLock = false,
                            isTrash = false,
                            isValidate = true
                        });
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.LoginSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Expired")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<string>("TokenId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isRevoked")
                        .HasColumnType("bit");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StaffId");

                    b.ToTable("LoginSessions");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.OrderDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("ShipmentId")
                        .HasColumnType("int");

                    b.Property<int?>("VaccineId")
                        .HasColumnType("int");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ShipmentId");

                    b.HasIndex("VaccineId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Pay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<double>("ExcessMoney")
                        .HasColumnType("float");

                    b.Property<double>("GuestMoney")
                        .HasColumnType("float");

                    b.Property<int>("InjectionScheduleId")
                        .HasColumnType("int");

                    b.Property<string>("Payer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("InjectionScheduleId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("StaffId");

                    b.ToTable("Pays");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.PayDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<double?>("DiscountPackage")
                        .HasColumnType("float");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("PayId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("int");

                    b.Property<int?>("VaccineId")
                        .HasColumnType("int");

                    b.Property<int?>("VaccinePackageId")
                        .HasColumnType("int");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PayId");

                    b.HasIndex("ShipmentId");

                    b.HasIndex("VaccineId");

                    b.HasIndex("VaccinePackageId");

                    b.ToTable("PayDetails");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2023, 1, 27, 3, 15, 35, 291, DateTimeKind.Local).AddTicks(9730),
                            Name = "SuperAdmin",
                            isTrash = false
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2023, 1, 27, 3, 15, 35, 291, DateTimeKind.Local).AddTicks(9744),
                            Name = "Admin",
                            isTrash = false
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2023, 1, 27, 3, 15, 35, 291, DateTimeKind.Local).AddTicks(9746),
                            Name = "User",
                            isTrash = false
                        });
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.PermissionDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<string>("PermissionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermissionValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.ToTable("PermissionDetails");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Max")
                        .HasColumnType("int");

                    b.Property<string>("PromotionCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.RegulationCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerTypeId")
                        .HasColumnType("int");

                    b.Property<int>("VaccineId")
                        .HasColumnType("int");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerTypeId");

                    b.HasIndex("VaccineId");

                    b.ToTable("RegulationCustomers");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.RegulationInjection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("Distance")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("RepeatInjection")
                        .HasColumnType("int");

                    b.Property<int>("VaccineId")
                        .HasColumnType("int");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("VaccineId");

                    b.ToTable("RegulationInjections");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.ScreeningExamination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("BloodPressure")
                        .HasColumnType("float");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Diagnostic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Heartbeat")
                        .HasColumnType("float");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<double>("Temperature")
                        .HasColumnType("float");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.Property<bool>("isEligible")
                        .HasColumnType("bit");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StaffId");

                    b.ToTable("ScreeningExaminations");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Shipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ManufactureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipmentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int>("VaccineId")
                        .HasColumnType("int");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.HasIndex("VaccineId");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("IdentityCard")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Sex")
                        .HasColumnType("bit");

                    b.Property<string>("StaffName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Village")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.ToTable("Staff");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "VNVC",
                            Avatar = "",
                            Country = "Vietnam",
                            Created = new DateTime(2023, 1, 27, 3, 15, 35, 292, DateTimeKind.Local).AddTicks(105),
                            DateOfBirth = new DateTime(2023, 1, 27, 3, 15, 35, 292, DateTimeKind.Local).AddTicks(106),
                            District = "VNVC",
                            IdentityCard = "",
                            PermissionId = 1,
                            Province = "",
                            Sex = true,
                            StaffName = "Super Admin",
                            Village = "",
                            isTrash = false
                        });
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.TypeOfVaccine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("TypeOfVaccines");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Vaccine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiseasePrevention")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InjectionSite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SideEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Storage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageTemperatures")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeOfVaccineId")
                        .HasColumnType("int");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("TypeOfVaccineId");

                    b.ToTable("Vaccines");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.VaccinePackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObjectInjection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("VaccinePackages");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.VaccinePackageDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfInjections")
                        .HasColumnType("int");

                    b.Property<int>("OrderInjection")
                        .HasColumnType("int");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("int");

                    b.Property<int?>("VaccineId")
                        .HasColumnType("int");

                    b.Property<int>("VaccinePackageId")
                        .HasColumnType("int");

                    b.Property<bool>("isGeneral")
                        .HasColumnType("bit");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ShipmentId");

                    b.HasIndex("VaccineId");

                    b.HasIndex("VaccinePackageId");

                    b.ToTable("VaccinePackageDetails");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.VaccinePrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<double>("EntryPrice")
                        .HasColumnType("float");

                    b.Property<double>("PreOderPrice")
                        .HasColumnType("float");

                    b.Property<double>("RetailPrice")
                        .HasColumnType("float");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("int");

                    b.Property<int?>("VaccineId")
                        .HasColumnType("int");

                    b.Property<bool>("isTrash")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ShipmentId");

                    b.HasIndex("VaccineId");

                    b.ToTable("VaccinePrices");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.AdditionalCustomerInformation", b =>
                {
                    b.HasOne("VNVCWEBAPI.DATA.Models.Customer", "Customer")
                        .WithMany("AdditionalCustomerInformation")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Cart", b =>
                {
                    b.HasOne("VNVCWEBAPI.DATA.Models.Login", "Login")
                        .WithMany("Carts")
                        .HasForeignKey("LoginId");

                    b.HasOne("VNVCWEBAPI.DATA.Models.VaccinePackage", "VaccinePackage")
                        .WithMany("Carts")
                        .HasForeignKey("PackageId");

                    b.HasOne("VNVCWEBAPI.DATA.Models.Vaccine", "Vaccine")
                        .WithMany("Carts")
                        .HasForeignKey("VaccineId");

                    b.Navigation("Login");

                    b.Navigation("Vaccine");

                    b.Navigation("VaccinePackage");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.ConditionPromotion", b =>
                {
                    b.HasOne("VNVCWEBAPI.DATA.Models.CustomerRank", "CustomerRank")
                        .WithMany()
                        .HasForeignKey("CustomerRankId");

                    b.HasOne("VNVCWEBAPI.DATA.Models.VaccinePackage", "VaccinePackage")
                        .WithMany()
                        .HasForeignKey("PackageVaccineId");

                    b.HasOne("VNVCWEBAPI.DATA.Models.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId");

                    b.HasOne("VNVCWEBAPI.DATA.Models.Promotion", "Promotion")
                        .WithMany("ConditionPromotions")
                        .HasForeignKey("PromotionId");

                    b.HasOne("VNVCWEBAPI.DATA.Models.Vaccine", "Vaccine")
                        .WithMany()
                        .HasForeignKey("VaccineId");

                    b.Navigation("CustomerRank");

                    b.Navigation("PaymentMethod");

                    b.Navigation("Promotion");

                    b.Navigation("Vaccine");

                    b.Navigation("VaccinePackage");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Customer", b =>
                {
                    b.HasOne("VNVCWEBAPI.DATA.Models.CustomerType", "CustomerType")
                        .WithMany("Customers")
                        .HasForeignKey("CustomerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerType");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.CustomerRankDetails", b =>
                {
                    b.HasOne("VNVCWEBAPI.DATA.Models.Customer", "Customer")
                        .WithMany("CustomerRankDetails")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VNVCWEBAPI.DATA.Models.Pay", "Pay")
                        .WithMany("CustomerRankDetails")
                        .HasForeignKey("PayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Pay");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.EntrySlip", b =>
                {
                    b.HasOne("VNVCWEBAPI.DATA.Models.Order", "Order")
                        .WithMany("EntrySlips")
                        .HasForeignKey("OrderId");

                    b.HasOne("VNVCWEBAPI.DATA.Models.Staff", "Staff")
                        .WithMany("EntrySlips")
                        .HasForeignKey("StaffId");

                    b.HasOne("VNVCWEBAPI.DATA.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Staff");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.EntrySlipDetails", b =>
                {
                    b.HasOne("VNVCWEBAPI.DATA.Models.EntrySlip", "EntrySlip")
                        .WithMany("EntrySlipDetails")
                        .HasForeignKey("EntrySlipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VNVCWEBAPI.DATA.Models.Shipment", "Shipment")
                        .WithMany("EntrySlipDetails")
                        .HasForeignKey("ShipmentID");

                    b.HasOne("VNVCWEBAPI.DATA.Models.Vaccine", "Vaccine")
                        .WithMany("EntrySlipDetails")
                        .HasForeignKey("VaccineId");

                    b.Navigation("EntrySlip");

                    b.Navigation("Shipment");

                    b.Navigation("Vaccine");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.InjectionIncident", b =>
                {
                    b.HasOne("VNVCWEBAPI.DATA.Models.InjectionSchedule", "InjectionSchedule")
                        .WithMany()
                        .HasForeignKey("InjectionScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VNVCWEBAPI.DATA.Models.Shipment", "Shipment")
                        .WithMany("InjectionIncidents")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VNVCWEBAPI.DATA.Models.Vaccine", "Vaccine")
                        .WithMany("InjectionIncidents")
                        .HasForeignKey("VaccineId");

                    b.Navigation("InjectionSchedule");

                    b.Navigation("Shipment");

                    b.Navigation("Vaccine");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.InjectionSchedule", b =>
                {
                    b.HasOne("VNVCWEBAPI.DATA.Models.Customer", "Customer")
                        .WithMany("InjectionSchedules")
                        .HasForeignKey("CustomerId");

                    b.HasOne("VNVCWEBAPI.DATA.Models.Staff", "Nominator")
                        .WithMany("Nominators")
                        .HasForeignKey("NominatorId");

                    b.HasOne("VNVCWEBAPI.DATA.Models.Staff", "Staff")
                        .WithMany("InjectionSchedules")
                        .HasForeignKey("StaffId");

                    b.HasOne("VNVCWEBAPI.DATA.Models.Staff", "Updater")
                        .WithMany("Updaters")
                        .HasForeignKey("UpdaterId");

                    b.Navigation("Customer");

                    b.Navigation("Nominator");

                    b.Navigation("Staff");

                    b.Navigation("Updater");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.InjectionScheduleDetail", b =>
                {
                    b.HasOne("VNVCWEBAPI.DATA.Models.InjectionSchedule", "InjectionSchedule")
                        .WithMany("InjectionScheduleDetails")
                        .HasForeignKey("InjectionScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VNVCWEBAPI.DATA.Models.Staff", "InjectionStaff")
                        .WithMany()
                        .HasForeignKey("InjectionStaffId");

                    b.HasOne("VNVCWEBAPI.DATA.Models.Shipment", "Shipment")
                        .WithMany("InjectionScheduleDetails")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VNVCWEBAPI.DATA.Models.Vaccine", "Vaccine")
                        .WithMany("InjectionScheduleDetails")
                        .HasForeignKey("VaccineId");

                    b.HasOne("VNVCWEBAPI.DATA.Models.VaccinePackage", "VaccinePackage")
                        .WithMany()
                        .HasForeignKey("VaccinePackageid");

                    b.Navigation("InjectionSchedule");

                    b.Navigation("InjectionStaff");

                    b.Navigation("Shipment");

                    b.Navigation("Vaccine");

                    b.Navigation("VaccinePackage");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Login", b =>
                {
                    b.HasOne("VNVCWEBAPI.DATA.Models.Customer", "Customer")
                        .WithOne("Login")
                        .HasForeignKey("VNVCWEBAPI.DATA.Models.Login", "CustomerId");

                    b.HasOne("VNVCWEBAPI.DATA.Models.Staff", "Staff")
                        .WithOne("Login")
                        .HasForeignKey("VNVCWEBAPI.DATA.Models.Login", "StaffId");

                    b.Navigation("Customer");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.LoginSession", b =>
                {
                    b.HasOne("VNVCWEBAPI.DATA.Models.Customer", "Customer")
                        .WithMany("LoginSessions")
                        .HasForeignKey("CustomerId");

                    b.HasOne("VNVCWEBAPI.DATA.Models.Staff", "Staff")
                        .WithMany("LoginSessions")
                        .HasForeignKey("StaffId");

                    b.Navigation("Customer");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Order", b =>
                {
                    b.HasOne("VNVCWEBAPI.DATA.Models.Staff", "Staff")
                        .WithMany("Orders")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VNVCWEBAPI.DATA.Models.Supplier", "Supplier")
                        .WithMany("Orders")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.OrderDetails", b =>
                {
                    b.HasOne("VNVCWEBAPI.DATA.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VNVCWEBAPI.DATA.Models.Shipment", "Shipment")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ShipmentId");

                    b.HasOne("VNVCWEBAPI.DATA.Models.Vaccine", "Vaccine")
                        .WithMany("OrderDetails")
                        .HasForeignKey("VaccineId");

                    b.Navigation("Order");

                    b.Navigation("Shipment");

                    b.Navigation("Vaccine");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Pay", b =>
                {
                    b.HasOne("VNVCWEBAPI.DATA.Models.InjectionSchedule", "InjectionSchedule")
                        .WithMany("Pays")
                        .HasForeignKey("InjectionScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VNVCWEBAPI.DATA.Models.PaymentMethod", "PaymentMethod")
                        .WithMany("Pays")
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VNVCWEBAPI.DATA.Models.Staff", "Staff")
                        .WithMany("Pays")
                        .HasForeignKey("StaffId");

                    b.Navigation("InjectionSchedule");

                    b.Navigation("PaymentMethod");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.PayDetail", b =>
                {
                    b.HasOne("VNVCWEBAPI.DATA.Models.Pay", "Pay")
                        .WithMany("PayDetails")
                        .HasForeignKey("PayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VNVCWEBAPI.DATA.Models.Shipment", "Shipment")
                        .WithMany("PayDetails")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VNVCWEBAPI.DATA.Models.Vaccine", "Vaccine")
                        .WithMany("PayDetails")
                        .HasForeignKey("VaccineId");

                    b.HasOne("VNVCWEBAPI.DATA.Models.VaccinePackage", "VaccinePackage")
                        .WithMany("PayDetails")
                        .HasForeignKey("VaccinePackageId");

                    b.Navigation("Pay");

                    b.Navigation("Shipment");

                    b.Navigation("Vaccine");

                    b.Navigation("VaccinePackage");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.PermissionDetails", b =>
                {
                    b.HasOne("VNVCWEBAPI.DATA.Models.Permission", "Permission")
                        .WithMany("PermissionDetails")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.RegulationCustomer", b =>
                {
                    b.HasOne("VNVCWEBAPI.DATA.Models.CustomerType", "CustomerType")
                        .WithMany("RegulationCustomers")
                        .HasForeignKey("CustomerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VNVCWEBAPI.DATA.Models.Vaccine", "Vaccine")
                        .WithMany()
                        .HasForeignKey("VaccineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerType");

                    b.Navigation("Vaccine");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.RegulationInjection", b =>
                {
                    b.HasOne("VNVCWEBAPI.DATA.Models.Vaccine", "Vaccine")
                        .WithMany("RegulationInjections")
                        .HasForeignKey("VaccineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vaccine");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.ScreeningExamination", b =>
                {
                    b.HasOne("VNVCWEBAPI.DATA.Models.Customer", "Customer")
                        .WithMany("SreeningExaminations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VNVCWEBAPI.DATA.Models.Staff", "Staff")
                        .WithMany("ScreeningExaminations")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Shipment", b =>
                {
                    b.HasOne("VNVCWEBAPI.DATA.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VNVCWEBAPI.DATA.Models.Vaccine", "Vaccine")
                        .WithMany("Shipments")
                        .HasForeignKey("VaccineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");

                    b.Navigation("Vaccine");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Staff", b =>
                {
                    b.HasOne("VNVCWEBAPI.DATA.Models.Permission", "Permission")
                        .WithMany("Staff")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Vaccine", b =>
                {
                    b.HasOne("VNVCWEBAPI.DATA.Models.TypeOfVaccine", "TypeOfVaccine")
                        .WithMany("Vaccines")
                        .HasForeignKey("TypeOfVaccineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeOfVaccine");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.VaccinePackageDetails", b =>
                {
                    b.HasOne("VNVCWEBAPI.DATA.Models.Shipment", "Shipment")
                        .WithMany("VaccinePackageDetails")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VNVCWEBAPI.DATA.Models.Vaccine", "Vaccine")
                        .WithMany("VaccinePackageDetails")
                        .HasForeignKey("VaccineId");

                    b.HasOne("VNVCWEBAPI.DATA.Models.VaccinePackage", "VaccinePackage")
                        .WithMany("VaccinePackageDetails")
                        .HasForeignKey("VaccinePackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shipment");

                    b.Navigation("Vaccine");

                    b.Navigation("VaccinePackage");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.VaccinePrice", b =>
                {
                    b.HasOne("VNVCWEBAPI.DATA.Models.Shipment", "Shipment")
                        .WithMany("VaccinePrices")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VNVCWEBAPI.DATA.Models.Vaccine", "Vaccine")
                        .WithMany("VaccinePrices")
                        .HasForeignKey("VaccineId");

                    b.Navigation("Shipment");

                    b.Navigation("Vaccine");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Customer", b =>
                {
                    b.Navigation("AdditionalCustomerInformation");

                    b.Navigation("CustomerRankDetails");

                    b.Navigation("InjectionSchedules");

                    b.Navigation("Login")
                        .IsRequired();

                    b.Navigation("LoginSessions");

                    b.Navigation("SreeningExaminations");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.CustomerType", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("RegulationCustomers");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.EntrySlip", b =>
                {
                    b.Navigation("EntrySlipDetails");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.InjectionSchedule", b =>
                {
                    b.Navigation("InjectionScheduleDetails");

                    b.Navigation("Pays");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Login", b =>
                {
                    b.Navigation("Carts");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Order", b =>
                {
                    b.Navigation("EntrySlips");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Pay", b =>
                {
                    b.Navigation("CustomerRankDetails");

                    b.Navigation("PayDetails");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.PaymentMethod", b =>
                {
                    b.Navigation("Pays");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Permission", b =>
                {
                    b.Navigation("PermissionDetails");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Promotion", b =>
                {
                    b.Navigation("ConditionPromotions");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Shipment", b =>
                {
                    b.Navigation("EntrySlipDetails");

                    b.Navigation("InjectionIncidents");

                    b.Navigation("InjectionScheduleDetails");

                    b.Navigation("OrderDetails");

                    b.Navigation("PayDetails");

                    b.Navigation("VaccinePackageDetails");

                    b.Navigation("VaccinePrices");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Staff", b =>
                {
                    b.Navigation("EntrySlips");

                    b.Navigation("InjectionSchedules");

                    b.Navigation("Login")
                        .IsRequired();

                    b.Navigation("LoginSessions");

                    b.Navigation("Nominators");

                    b.Navigation("Orders");

                    b.Navigation("Pays");

                    b.Navigation("ScreeningExaminations");

                    b.Navigation("Updaters");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Supplier", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.TypeOfVaccine", b =>
                {
                    b.Navigation("Vaccines");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.Vaccine", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("EntrySlipDetails");

                    b.Navigation("InjectionIncidents");

                    b.Navigation("InjectionScheduleDetails");

                    b.Navigation("OrderDetails");

                    b.Navigation("PayDetails");

                    b.Navigation("RegulationInjections");

                    b.Navigation("Shipments");

                    b.Navigation("VaccinePackageDetails");

                    b.Navigation("VaccinePrices");
                });

            modelBuilder.Entity("VNVCWEBAPI.DATA.Models.VaccinePackage", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("PayDetails");

                    b.Navigation("VaccinePackageDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
